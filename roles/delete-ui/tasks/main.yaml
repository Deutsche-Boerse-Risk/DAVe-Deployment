---

####################
# Delete DAVe-UI
####################

# Delete service

- name: Find out if service already exists
  command: "kubectl --namespace {{ namespace }} get service dave-ui -o json"
  register: get_service
  ignore_errors: true

- name: Delete the service
  command: "kubectl --namespace {{ namespace }} delete service dave-ui"
  when: get_service|succeeded

# Delete config-map

- name: Find out if config-map already exists
  command: "kubectl --namespace {{ namespace }} get cm dave-ui -o json"
  register: get_cm
  ignore_errors: true

- name: Delete the config-map
  command: "kubectl --namespace {{ namespace }} delete cm dave-ui"
  when: get_cm|succeeded

# Delete secret

- name: Find out if secret already exists
  command: "kubectl --namespace {{ namespace }} get secret dave-ui -o json"
  register: get_secret
  ignore_errors: true

- name: Delete the secret
  command: "kubectl --namespace {{ namespace }} delete secret dave-ui"
  when: get_secret|succeeded

# Delete deployment

- name: Find out if deployment already exists
  command: "kubectl --namespace {{ namespace }} get deployment dave-ui -o json"
  register: get_deployment
  ignore_errors: true

- name: Delete the deployment
  command: "kubectl --namespace {{ namespace }} delete deployment dave-ui"
  when: get_deployment|succeeded

# Delete the Route53 DNS record

- route53:
      command: get
      zone: "{{ dns_zone }}"
      record: "{{ ui_dns }}"
      type: A
  register: route53

- debug:
    var: route53

- route53:
    command: delete
    zone: "{{ dns_zone }}"
    record: "{{ ui_dns }}"
    value: "{{ route53.set.value }}"
    type: A
    alias: True
    alias_hosted_zone_id: "{{ route53.set.alias_hosted_zone_id }}"
    overwrite: True
  when: route53.set.record is defined
