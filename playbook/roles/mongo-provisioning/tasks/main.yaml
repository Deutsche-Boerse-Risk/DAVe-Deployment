---

####################
# Provision Mongo database
####################

# Render templates

- name: Render the restore script
  template:
    src: mongo-restore.sh.j2
    dest: /tmp/mongo-restore.sh
    mode: 0744
  become: false
  when:
    - db_unload_url is defined
    - database_url is undefined

# Download the file

- name: Download database unload
  get_url:
    url: "{{ db_unload_url }}"
    dest: /tmp/mongo.backup.tar.gz
    mode: 0744
    force: yes
  when:
    - db_unload_url is defined
    - database_url is undefined

# Copy the backup file

- name: Copy the file to the mongo container
  command: "kubectl cp /tmp/mongo.backup.tar.gz {{ namespace }}/dave-mongo-0:/tmp/mongo.backup.tar.gz --container mongo"
  when:
    - db_unload_url is defined
    - database_url is undefined

# Copy the restore script

- name: Copy the restore script to the mongo container
  command: "kubectl cp /tmp/mongo-restore.sh {{ namespace }}/dave-mongo-0:/tmp/mongo-restore.sh --container mongo"
  when:
    - db_unload_url is defined
    - database_url is undefined

# Set the restore script as executable

- name: Set the restore script as executable
  command: "kubectl --namespace {{ namespace }} exec dave-mongo-0 -t --container mongo chmod u+x /tmp/mongo-restore.sh"
  when:
    - db_unload_url is defined
    - database_url is undefined

# Unpack and load the file into database

- name: Unpack the archive and restore the database
  command: "kubectl --namespace {{ namespace }} exec dave-mongo-0 -t --container mongo /tmp/mongo-restore.sh"
  when:
    - db_unload_url is defined
    - database_url is undefined

# Delete the restore script

- name: Delete the restore script
  command: "kubectl --namespace {{ namespace }} exec dave-mongo-0 -t --container mongo rm /tmp/mongo-restore.sh"
  when:
    - db_unload_url is defined
    - database_url is undefined
